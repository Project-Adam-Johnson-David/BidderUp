{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamb\\\\P2\\\\Project2\\\\FrontEnd\\\\src\\\\Components\\\\Bids.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport Bid from \"./Bid\";\nimport Navbar from \"./Navbar\";\nimport image from '../images.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Bids(props) {\n  _s();\n\n  const [bids, setBids] = useState([]);\n  React.useEffect(() => {\n    getData();\n  }, []);\n  let amount = 40;\n  let bidder = \"test\";\n  let date = \"\";\n  let id = null;\n  let owner = props.username; //    async function postNewItem(e){\n  //        e.preventDefault();\n  //        await axios({\n  //            method: 'post',\n  //            url: \"http://localhost:8080/bid/post_bid\",\n  //            data: { owner, bidder, amount, date, id},\n  //            // params:{username, password},\n  //            headers : {\n  //                'Content-Type': 'application/json'\n  //            }\n  //        }).then(res => {\n  //            let status = res.data;//data as JSON of all the bids that use is receiving\n  //            if(status===200){\n  //                // NotificationManager.success('Successful', 'Successfully Submitted the Reimbursement Request!');\n  //                console.log(\"code was here\"+res.data);\n  //                setBids(res.data);\n  //            }\n  //            else{\n  //                // NotificationManager.error('Unsuccessful', 'Sorry, we couldn\\'t change your email');\n  //                console.log(\"response was not 200\"+res.data);\n  //            }\n  //        })\n  //            .catch(err => alert(err));\n  //\n  //    }\n\n  async function getData() {\n    let username = props.username;\n    await axios({\n      method: 'get',\n      url: `http://localhost:8080/bid/bids/${username}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      let bids = res.data; //data as JSON of all the bids that use is receiving\n\n      setBids(bids);\n      console.log(bids);\n    }).catch(err => alert(err));\n  }\n\n  function changeTab() {\n    console.log(\"code was here\");\n    props.setTab(\"Browse\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      goHome: props.goHome,\n      goAccount: props.goAccount,\n      goPayments: props.goPayments,\n      goViewBalance: props.goViewBalance,\n      username: props.username,\n      logOut: props.logOut,\n      goPostNewItem: props.goPostNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.toggleBidPage,\n      children: \"Browse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bid-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"item-image\",\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"New York Cosmos Jersey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"filter\",\n        placeholder: \"Filter by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"Select car:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current Bids\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll\",\n        children: bids.map(d => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            className: \"bid\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Bidder \", d.bidder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price \", d.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Date submitted \", d.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"accept\",\n              children: \"accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deny\",\n              children: \"deny\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 34\n            }, this)]\n          }, d.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n} //<button onClick={postNewItem}>Post a new item</button>\n\n\n_s(Bids, \"7IqXLoYetqpEUWDMKNkMJXGFqd0=\");\n\n_c = Bids;\nexport default Bids;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bids\");","map":{"version":3,"sources":["C:/Users/adamb/P2/Project2/FrontEnd/src/Components/Bids.js"],"names":["React","useState","axios","Bid","Navbar","image","Bids","props","bids","setBids","useEffect","getData","amount","bidder","date","id","owner","username","method","url","headers","then","res","data","console","log","catch","err","alert","changeTab","setTab","goHome","goAccount","goPayments","goViewBalance","logOut","goPostNewItem","toggleBidPage","map","d"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Bid from \"./Bid\";\r\nimport Navbar from \"./Navbar\";\r\nimport image from '../images.jpeg'\r\nfunction Bids(props){\r\n    const [bids, setBids] = useState([])\r\n\r\n    React.useEffect(()=>{\r\n        getData();\r\n    },[]);\r\n\r\n    let amount = 40;\r\n    let bidder =\"test\";\r\n    let date = \"\";\r\n    let id = null;\r\n    let owner = props.username;\r\n\r\n//    async function postNewItem(e){\r\n//        e.preventDefault();\r\n//        await axios({\r\n//            method: 'post',\r\n//            url: \"http://localhost:8080/bid/post_bid\",\r\n//            data: { owner, bidder, amount, date, id},\r\n//            // params:{username, password},\r\n//            headers : {\r\n//                'Content-Type': 'application/json'\r\n//            }\r\n//        }).then(res => {\r\n//            let status = res.data;//data as JSON of all the bids that use is receiving\r\n//            if(status===200){\r\n//                // NotificationManager.success('Successful', 'Successfully Submitted the Reimbursement Request!');\r\n//                console.log(\"code was here\"+res.data);\r\n//                setBids(res.data);\r\n//            }\r\n//            else{\r\n//                // NotificationManager.error('Unsuccessful', 'Sorry, we couldn\\'t change your email');\r\n//                console.log(\"response was not 200\"+res.data);\r\n//            }\r\n//        })\r\n//            .catch(err => alert(err));\r\n//\r\n//    }\r\n\r\n    async function getData(){\r\n        let username= props.username;\r\n        await axios({\r\n            method: 'get',\r\n            url: `http://localhost:8080/bid/bids/${username}`,\r\n            headers : {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            let bids = res.data;//data as JSON of all the bids that use is receiving\r\n            setBids(bids);\r\n            console.log(bids);\r\n\r\n            })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    function changeTab(){\r\n        console.log(\"code was here\");\r\n        props.setTab(\"Browse\");\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Navbar goHome={props.goHome} goAccount={props.goAccount} goPayments={props.goPayments}\r\n                    goViewBalance={props.goViewBalance} username={props.username} logOut={props.logOut}\r\n                    goPostNewItem={props.goPostNewItem}/>\r\n                    <button onClick={props.toggleBidPage}>Browse</button>\r\n            <div className=\"bid-section\">\r\n            <div><img className=\"item-image\" src={image}/>\r\n            <h6>New York Cosmos Jersey</h6></div>\r\n\r\n\r\n                <input type=\"text\" className=\"filter\" placeholder=\"Filter by name\"/>\r\n                <select>\r\n                    <option value=\"0\">Select car:</option>\r\n                    <option value=\"1\">Date</option>\r\n                    <option value=\"2\">Price</option>\r\n                </select>\r\n                <p>Current Bids</p>\r\n                <div className=\"scroll\">\r\n                {bids.map(d=>{\r\n                             <div className=\"bid\" key={d.id}>\r\n                                     <p>Bidder {d.bidder}</p>\r\n                                     <p>Price {d.amount}</p>\r\n                                     <p>Date submitted {d.date}</p>\r\n                                 <button className=\"accept\">accept</button>\r\n                                 <button  className=\"deny\">deny</button>\r\n                             </div>\r\n                     })}\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n //<button onClick={postNewItem}>Post a new item</button>\r\nexport default Bids;"]},"metadata":{},"sourceType":"module"}