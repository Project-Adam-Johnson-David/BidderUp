{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamb\\\\P2\\\\Project2\\\\FrontEnd\\\\src\\\\Components\\\\Bids.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport Bid from \"./Bid\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Bids(props) {\n  _s();\n\n  const [bids, setBids] = useState([]);\n  React.useEffect(() => {\n    getData();\n  }, []);\n  let amount = 40;\n  let bidder = \"test\";\n  let date = \"\";\n  let id = null;\n  let owner = \"adam\";\n\n  async function postNewItem(e) {\n    e.preventDefault();\n    await axios({\n      method: 'post',\n      url: \"http://localhost:8080/bid/post_bid\",\n      data: {\n        owner,\n        bidder,\n        amount,\n        date,\n        id\n      },\n      // params:{username, password},\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      let status = res.data; //data as JSON of all the bids that use is receiving\n\n      if (status === 200) {\n        // NotificationManager.success('Successful', 'Successfully Submitted the Reimbursement Request!');\n        console.log(\"code was here\" + res.data);\n        setBids(res.data);\n      } else {\n        // NotificationManager.error('Unsuccessful', 'Sorry, we couldn\\'t change your email');\n        console.log(\"response was not 200\" + res.data);\n      }\n    }).catch(err => alert(err));\n  }\n\n  async function getData() {\n    let username = props.username;\n    await axios({\n      method: 'get',\n      url: `http://localhost:8080/bid/bids/${username}`,\n      // params:{username, password},\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      let status = res.data; //data as JSON of all the bids that use is receiving\n\n      if (status === 200) {\n        // NotificationManager.success('Successful', 'Successfully Submitted the Reimbursement Request!');\n        console.log(\"code was here\" + res.data);\n        console.log(res.status);\n      } else {\n        // NotificationManager.error('Unsuccessful', 'Sorry, we couldn\\'t change your email');\n        console.log(\"response was not 200\" + res.data);\n      }\n    }).catch(err => alert(err));\n  }\n\n  function changeTab() {\n    console.log(\"code was here\");\n    props.setTab(\"Browse\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      goHome: props.goHome,\n      goAccount: props.goAccount,\n      goPayments: props.goPayments,\n      goViewBalance: props.goViewBalance,\n      username: props.username,\n      logOut: props.logOut,\n      goPostNewItem: props.goPostNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.toggleBidPage,\n      children: \"Browse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bid-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current bids\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: postNewItem,\n        children: \"Post a new item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"filter\",\n        placeholder: \"Filter by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"Select car:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll\",\n        children: [/*#__PURE__*/_jsxDEV(Bid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Bids, \"7IqXLoYetqpEUWDMKNkMJXGFqd0=\");\n\n_c = Bids;\nexport default Bids;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bids\");","map":{"version":3,"sources":["C:/Users/adamb/P2/Project2/FrontEnd/src/Components/Bids.js"],"names":["React","useState","axios","Bid","Navbar","Bids","props","bids","setBids","useEffect","getData","amount","bidder","date","id","owner","postNewItem","e","preventDefault","method","url","data","headers","then","res","status","console","log","catch","err","alert","username","changeTab","setTab","goHome","goAccount","goPayments","goViewBalance","logOut","goPostNewItem","toggleBidPage"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Bid from \"./Bid\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Bids(props){\r\n    const [bids, setBids] = useState([])\r\n\r\n    React.useEffect(()=>{\r\n        getData();\r\n    },[]);\r\n\r\n    let amount = 40;\r\n    let bidder =\"test\";\r\n    let date = \"\";\r\n    let id = null;\r\n    let owner = \"adam\";\r\n\r\n    async function postNewItem(e){\r\n        e.preventDefault();\r\n        await axios({\r\n            method: 'post',\r\n            url: \"http://localhost:8080/bid/post_bid\",\r\n            data: { owner, bidder, amount, date, id},\r\n            // params:{username, password},\r\n            headers : {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            let status = res.data;//data as JSON of all the bids that use is receiving\r\n            if(status===200){\r\n                // NotificationManager.success('Successful', 'Successfully Submitted the Reimbursement Request!');\r\n                console.log(\"code was here\"+res.data);\r\n                setBids(res.data);\r\n            }\r\n            else{\r\n                // NotificationManager.error('Unsuccessful', 'Sorry, we couldn\\'t change your email');\r\n                console.log(\"response was not 200\"+res.data);\r\n            }\r\n        })\r\n            .catch(err => alert(err));\r\n\r\n    }\r\n\r\n    async function getData(){\r\n        let username= props.username;\r\n        await axios({\r\n            method: 'get',\r\n            url: `http://localhost:8080/bid/bids/${username}`,\r\n            // params:{username, password},\r\n            headers : {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            let status = res.data;//data as JSON of all the bids that use is receiving\r\n\r\n            if(status===200){\r\n                // NotificationManager.success('Successful', 'Successfully Submitted the Reimbursement Request!');\r\n                console.log(\"code was here\"+res.data);\r\n                console.log(res.status);\r\n            }\r\n            else{\r\n                // NotificationManager.error('Unsuccessful', 'Sorry, we couldn\\'t change your email');\r\n                console.log(\"response was not 200\"+res.data);\r\n            }\r\n        })\r\n            .catch(err => alert(err));\r\n    }\r\n\r\n    function changeTab(){\r\n        console.log(\"code was here\");\r\n        props.setTab(\"Browse\");\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Navbar goHome={props.goHome} goAccount={props.goAccount} goPayments={props.goPayments}\r\n                    goViewBalance={props.goViewBalance} username={props.username} logOut={props.logOut}\r\n                    goPostNewItem={props.goPostNewItem}/>\r\n                    <button onClick={props.toggleBidPage}>Browse</button>\r\n            <div className=\"bid-section\">\r\n                <p>Current bids</p>\r\n                <button onClick={postNewItem}>Post a new item</button>\r\n                <input type=\"text\" className=\"filter\" placeholder=\"Filter by name\"/>\r\n                <select>\r\n                    <option value=\"0\">Select car:</option>\r\n                    <option value=\"1\">Date</option>\r\n                    <option value=\"2\">Price</option>\r\n                </select>\r\n                <div className=\"scroll\">\r\n                    <Bid/>\r\n                    <Bid/>\r\n                    <Bid/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Bids;"]},"metadata":{},"sourceType":"module"}